C51 COMPILER V9.54   MAIN                                                                  06/13/2025 10:23:38 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\code;..\user) DEBUG OB
                    -JECTEXTEND PRINT(.\main.lst) TABS(2) OBJECT(..\obj\main.obj)

line level    source

   1          /***************************飞音云电子****************************
   2          **  工程名称：YS-V0.7语音识别模块驱动程序
   3          **  CPU: STC11L08XE
   4          **  晶振：22.1184MHZ
   5          **  波特率：9600 bit/S
   6          **  配套产品信息：YS-V0.7语音识别开发板
   7          **                http://yuesheng001.taobao.com
   8          **  作者：zdings
   9          **  联系：751956552@qq.com
  10          **  修改日期：2013.9.13
  11          **  说明：口令模式+IO控制： 即每次识别时都需要说“小杰”这个口令 ，才能够进行下一级的识别
  12          /***************************飞音云电子******************************/
  13          #include "config.h"
  14          /************************************************************************************/
  15          //  nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  16          //  LD_ASR_NONE:    表示没有在作ASR识别
  17          //  LD_ASR_RUNING：   表示LD3320正在作ASR识别中
  18          //  LD_ASR_FOUNDOK:   表示一次识别流程结束后，有一个识别结果
  19          //  LD_ASR_FOUNDZERO: 表示一次识别流程结束后，没有识别结果
  20          //  LD_ASR_ERROR:   表示一次识别流程中LD3320芯片内部出现不正确的状态
  21          /***********************************************************************************/
  22          uint8 idata nAsrStatus=0; 
  23          void MCU_init(); 
  24          void ProcessInt0(); //识别处理函数
  25          void  delay(unsigned long uldata);
  26          void  User_handle(uint8 dat);//用户执行操作函数
  27          void Led_test(void);//单片机工作指示
  28          void Delay200ms();
  29          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  30          sbit LED=P4^2;//信号指示灯
  31          //应用IO口定义 （模块标注 P2）
  32          sbit PA1=P1^0; //对应板上标号 P1.0
  33          sbit PA2=P1^1;  //对应板上标号 P1.1
  34          sbit PA3=P1^2;  //.....
  35          sbit PA4=P1^3;  //.....
  36          sbit PA5=P1^4;  //.....
  37          sbit PA6=P1^5;  //.....
  38          sbit PA7=P1^6;  //对应板上标号 P1.6
  39          sbit PA8=P1^7;  //对应板上标号 P1.7
  40          
  41          
  42          /***********************************************************
  43          * 名    称： void  main(void)
  44          * 功    能： 主函数 程序入口
  45          * 入口参数：  
  46          * 出口参数：
  47          * 说    明：           
  48          * 调用方法： 
  49          **********************************************************/ 
  50          void  main(void)
  51          {
  52   1        uint8 idata nAsrRes;
  53   1        uint8 i=0;
  54   1        Led_test();
C51 COMPILER V9.54   MAIN                                                                  06/13/2025 10:23:38 PAGE 2   

  55   1        MCU_init();
  56   1        LD_Reset();
  57   1        UartIni(); /*串口初始化*/
  58   1        nAsrStatus = LD_ASR_NONE;   //  初始状态：没有在作ASR
  59   1        
  60   1      //  #ifdef TEST 
  61   1      //  PrintCom("口令：1、代码测试\r\n"); /*text.....*/
  62   1      //  PrintCom("  2、开发板验证\r\n"); /*text.....*/
  63   1      //  PrintCom("  3、开灯\r\n"); /*text.....*/
  64   1      //  PrintCom("  4、关灯\r\n"); /*text.....*/
  65   1      //  PrintCom("  5、北京\r\n"); /*text.....*/
  66   1      //  PrintCom("  6、上海\r\n"); /*text.....*/
  67   1      //  PrintCom("  7、广州\r\n"); /*text.....*/
  68   1      //  #endif
  69   1      
  70   1        while(1)
  71   1        {
  72   2          switch(nAsrStatus)
  73   2          {
  74   3            case LD_ASR_RUNING:
  75   3            case LD_ASR_ERROR:    
  76   3              break;
  77   3            case LD_ASR_NONE:
  78   3            {
  79   4              nAsrStatus=LD_ASR_RUNING;
  80   4              if (RunASR()==0)  /*  启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  81   4              {
  82   5                nAsrStatus = LD_ASR_ERROR;
  83   5              }
  84   4              break;
  85   4            }
  86   3            case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  87   3            {       
  88   4              nAsrRes = LD_GetResult();   /*获取结果*/
  89   4              User_handle(nAsrRes);//用户执行函数 
  90   4              nAsrStatus = LD_ASR_NONE;
  91   4              break;
  92   4            }
  93   3            case LD_ASR_FOUNDZERO:
  94   3            default:
  95   3            {
  96   4              nAsrStatus = LD_ASR_NONE;
  97   4              break;
  98   4            }
  99   3          }// switch        
 100   2        }// while
 101   1      
 102   1      }
 103          /***********************************************************
 104          * 名    称：   LED灯测试
 105          * 功    能： 单片机是否工作指示
 106          * 入口参数： 无 
 107          * 出口参数：无
 108          * 说    明：           
 109          **********************************************************/
 110          void Led_test(void)
 111          {
 112   1        LED=~ LED;
 113   1        Delay200ms();
 114   1        LED=~ LED;
 115   1        Delay200ms();
 116   1        LED=~ LED;
C51 COMPILER V9.54   MAIN                                                                  06/13/2025 10:23:38 PAGE 3   

 117   1        Delay200ms();
 118   1        LED=~ LED;
 119   1        Delay200ms();
 120   1        LED=~ LED;
 121   1        Delay200ms();
 122   1        LED=~ LED;
 123   1      }
 124          /***********************************************************
 125          * 名    称： void MCU_init()
 126          * 功    能： 单片机初始化
 127          * 入口参数：  
 128          * 出口参数：
 129          * 说    明：           
 130          * 调用方法： 
 131          **********************************************************/ 
 132          void MCU_init()
 133          {
 134   1        P0 = 0xff;
 135   1        P1 = 0x00;
 136   1        P2 = 0xff;
 137   1        P3 = 0xff;
 138   1        P4 = 0xff;
 139   1        P1M1=0;
 140   1        P1M0=0xff;
 141   1        LD_MODE = 0;    //  设置MD管脚为低，并行模式读写
 142   1        IE0=1;
 143   1        EX0=1;
 144   1        EA=1;
 145   1      }
 146          /***********************************************************
 147          * 名    称：  延时函数
 148          * 功    能：
 149          * 入口参数：  
 150          * 出口参数：
 151          * 说    明：           
 152          * 调用方法： 
 153          **********************************************************/ 
 154          void Delay200us()   //@22.1184MHz
 155          {
 156   1        unsigned char i, j;
 157   1        _nop_();
 158   1        _nop_();
 159   1        i = 5;
 160   1        j = 73;
 161   1        do
 162   1        {
 163   2          while (--j);
 164   2        } while (--i);
 165   1      }
 166          
 167          void  delay(unsigned long uldata)
 168          {
 169   1        unsigned int j  =  0;
 170   1        unsigned int g  =  0;
 171   1        while(uldata--)
 172   1        Delay200us();
 173   1      }
 174          
 175          void Delay200ms()   //@22.1184MHz
 176          {
 177   1        unsigned char i, j, k;
 178   1      
C51 COMPILER V9.54   MAIN                                                                  06/13/2025 10:23:38 PAGE 4   

 179   1        i = 17;
 180   1        j = 208;
 181   1        k = 27;
 182   1        do
 183   1        {
 184   2          do
 185   2          {
 186   3            while (--k);
 187   3          } while (--j);
 188   2        } while (--i);
 189   1      }
 190          
 191          /***********************************************************
 192          * 名    称： 中断处理函数
 193          * 功    能：
 194          * 入口参数：  
 195          * 出口参数：
 196          * 说    明：           
 197          * 调用方法： 
 198          **********************************************************/ 
 199          void ExtInt0Handler(void) interrupt 0  
 200          {   
 201   1        ProcessInt0();        /*  LD3320 送出中断信号，包括ASR和播放MP3的中断，需要在中断处理函数中分别处理*/
 202   1      }
 203          /***********************************************************
 204          * 名    称：用户执行函数 
 205          * 功    能：识别成功后，执行动作可在此进行修改 
 206          * 入口参数： 无 
 207          * 出口参数：无
 208          * 说    明： 通过控制PAx端口的高低电平，从而控制外部继电器的通断           
 209          **********************************************************/
 210          void  User_handle(uint8 dat)
 211          {
 212   1             switch(dat)       /*对结果执行相关操作,客户修改*/
 213   1              {
 214   2                case CODE_KFBYZ:   /*命令“全开”*/
 215   2                  UARTSendByte('A');//PrintCom("“关闭灯光”命令识别成功\r\n");//串口输出提示信息（可删除）
 216   2                  PA2=1;//让PA2端口为高电平
 217   2                                 break;         
 218   2                case CODE_DMCS:     /*命令“测试”*/
 219   2                  UARTSendByte('B');//PrintCom("“打开灯光”命令识别成功\r\n"); //串口输出提示信息（可删除）
 220   2                  PA1=1;//让PA1端口为高电平
 221   2                                 break;
 222   2      
 223   2                case CODE_KD:   /*命令“复位”*/        
 224   2                  UARTSendByte('C');//PrintCom("“打开窗帘”命令识别成功\r\n"); //串口输出提示信息（可删除）
 225   2                  PA3=1;//让PA3端口为高电平 
 226   2                                break;
 227   2                case CODE_GD:   /*命令“复位”*/        
 228   2                  UARTSendByte('D');//PrintCom("“关闭窗帘”命令识别成功\r\n"); //串口输出提示信息（可删除）
 229   2                  PA3=0;//让PA3端口为低电平
 230   2                                break;
 231   2                case CODE_BJ:   /*命令“复位”*/        
 232   2                  UARTSendByte('E');//PrintCom("“打开空调”命令识别成功\r\n"); //串口输出提示信息（可删除）
 233   2                  PA4=1;//让PA4端口为高电平
 234   2                                break;
 235   2                case CODE_SH:   /*命令“关闭空调”*/        
 236   2                  //PrintCom("“上海”命令识别成功\r\n"); //串口输出提示信息（可删除）
 237   2                  UARTSendByte('F');
 238   2                  PA5=1;//让PA5端口为高电平
 239   2                                break;
 240   2                case CODE_GZ:   /*命令“复位”*/        
C51 COMPILER V9.54   MAIN                                                                  06/13/2025 10:23:38 PAGE 5   

 241   2                  //PrintCom("“广州”命令识别成功\r\n"); //串口输出提示信息（可删除）
 242   2                  UARTSendByte('G');
 243   2                  PA6=1;//让PA6端口为高电平
 244   2                                break;                                                      
 245   2                    default://PrintCom("请重新识别发口令\r\n"); //串口输出提示信息（可删除）
 246   2                                break;
 247   2              } 
 248   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    331    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       9
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
